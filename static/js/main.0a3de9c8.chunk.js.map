{"version":3,"sources":["components/ListCocktails.js","App.js","reportWebVitals.js","index.js"],"names":["ListCocktails","state","listCocktail","name","loading","handleOnChange","e","setState","target","value","handleSubmit","preventDefault","fetchingCoctail","a","this","axios","get","res","console","log","data","drinks","className","type","onChange","onClick","map","item","index","src","strDrinkThumb","alt","strDrink","strInstructions","id","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGMA,E,4MACJC,MAAQ,CACNC,aAAc,GACdC,KAAM,GACNC,SAAS,G,EAGXC,eAAiB,SAACC,GACd,EAAKC,SAAS,CACVJ,KAAMG,EAAEE,OAAOC,S,EAIvBC,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKC,mB,4FAGT,4BAAAC,EAAA,6DACIC,KAAKP,SAAS,CAACH,SAAS,IAD5B,SAEkBW,IAAMC,IAAN,mEAC8CF,KAAKb,MAAME,OAH3E,OAEMc,EAFN,OAKEC,QAAQC,IAAI,cAAeF,EAAIG,KAAKC,QACpCP,KAAKP,SAAS,CACZL,aAAce,EAAIG,MAAQH,EAAIG,KAAKC,OAASJ,EAAIG,KAAKC,OAAS,GAC9DjB,SAAS,IARb,gD,4HAYA,sBAAAS,EAAA,sDACEC,KAAKF,kBADP,gD,0EAIA,WAAU,IAAD,OACP,EAAgCE,KAAKb,MAA/BC,EAAN,EAAMA,aAAcE,EAApB,EAAoBA,QACpB,OACE,qCACE,sBAAKkB,UAAU,QAAf,UACI,uBAAOC,KAAK,OAAOC,SAAU,SAAClB,GAAD,OAAK,EAAKD,eAAeC,MACtD,wBAAQmB,QAAS,SAACnB,GAAD,OAAK,EAAKI,aAAaJ,IAAxC,gCAEJ,qBAAKgB,UAAU,YAAf,SACIlB,EAiBA,6CAhBAF,EAAawB,KAAI,SAACC,EAAMC,GACtB,OACE,mCACE,sBAAKN,UAAU,mBAAf,UACE,qBAAKO,IAAKF,EAAKG,cAAeC,IAAI,KAClC,4BACE,mDAAsBJ,EAAKK,cAE7B,8BACE,yCAAYL,EAAKM,mBAAwB,SANNN,EAAKO,kB,GA/ClCC,aAoEbnC,IC1DAoC,MATf,WACE,OACE,sBAAKd,UAAU,MAAf,UACI,mCAAQ,qCAAR,aACA,cAAC,EAAD,QCIOe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0a3de9c8.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport \"./ListCocktails.scss\";\r\nclass ListCocktails extends Component {\r\n  state = {\r\n    listCocktail: [],\r\n    name: \"\",\r\n    loading: false,\r\n  };\r\n\r\n  handleOnChange = (e) => {\r\n      this.setState({\r\n          name: e.target.value\r\n      })\r\n  }\r\n\r\n  handleSubmit = (e) =>{\r\n      e.preventDefault();\r\n      this.fetchingCoctail();\r\n  }\r\n\r\n  async fetchingCoctail(){\r\n      this.setState({loading: true})\r\n    let res = await axios.get(\r\n      `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${this.state.name}`\r\n    );\r\n    console.log(\"check data:\", res.data.drinks);\r\n    this.setState({\r\n      listCocktail: res.data && res.data.drinks ? res.data.drinks : [],\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.fetchingCoctail();\r\n  }\r\n\r\n  render() {\r\n    let { listCocktail, loading } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"input\">        \r\n            <input type=\"text\" onChange={(e)=>this.handleOnChange(e)} />\r\n            <button onClick={(e)=>this.handleSubmit(e)}>SearchCoctails </button>\r\n        </div>\r\n        <div className=\"container\">\r\n          {!loading ? (\r\n            listCocktail.map((item, index) => {\r\n              return (\r\n                <>\r\n                  <div className=\"product-cocktail\" key={item.id}>\r\n                    <img src={item.strDrinkThumb} alt=\"\" />\r\n                    <p>\r\n                      <span>Name cocktail: {item.strDrink}</span>\r\n                    </p>\r\n                    <p>\r\n                      <span>Use: {item.strInstructions}</span>{\" \"}\r\n                    </p>\r\n                  </div>\r\n                </>\r\n              );\r\n            })\r\n          ) : (\r\n            <div>Loading...</div>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListCocktails;\r\n","import React from 'react';\nimport './App.scss';\nimport  ListCocktails from \"./components/ListCocktails\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <header><span>C</span>OCKTAIL</header>\n        <ListCocktails />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}